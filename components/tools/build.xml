<?xml version="1.0" encoding="utf-8"?>
<project name="tools" default="help" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<dirname property="up-one" file="${basedir}"/>
	<property name="import.dir" value="${up-one}/antlib/resources"/>

	<import file="${import.dir}/global.xml"/>
	<import file="${import.dir}/lifecycle.xml"/>

	<target name="help" description="This help message">
		<echo>
			The tools/ directory is a special repository
			for loosely coupled OMERO components. Each of
			these tools depends on a completed "dist" of
			OMERO.
		</echo>
	</target>

	<target name="buildlist" unless="deps.build.path">
		<installIvy/>
		<ivy:buildlist settingsRef="ivy.${ant.project.name}" reference="deps.build.path">
			<fileset dir="${tools.comp}" includes="*/build.xml"/>
		</ivy:buildlist>
	</target>

	<target name="build" depends="buildlist" description="Calls 'tools-build' on all components to fill target">
		<mkdir dir="${tools.classes}"/>
		<iterate target="tools-dist"/>
	</target>

	<target name="dist" description="Copies target onto an existing dist">
		<mkdir dir="${tools.classes}/META-INF"/>
		<echo file="${tools.classes}/META-INF/README.txt">
			This jar was created by the tools/build.xml script's dist target
			and contains non-core classes, including both server and client
			side code for use with OMERO.
		</echo>
		<mkdir dir="target/lib/server"/>
		<!-- Look for file above src -->
		<property name="filegz" value="../../../omero_scripts-${versions.omero-scripts}.tar.gz" />
		<if>
			<available file="${filegz}"/>
            <then>
               <copy file="${filegz}" todir="target/downloads/scripts"/>
            </then>
			<else>
		        <download pkg="omero-scripts" file="omero_scripts-${versions.omero-scripts}.tar.gz" expected="${versions.omero-scripts-md5}"
			where="target/downloads/scripts"/>
		    </else>
		</if>
		<untar src="target/downloads/scripts/omero_scripts-${versions.omero-scripts}.tar.gz" dest="target/downloads/scripts" compression="gzip"/>
		<copy todir="target/lib/scripts">
			<fileset dir="target/downloads/scripts/omero_scripts-${versions.omero-scripts}" includes="omero/**/*,README*"/>
		</copy>
		<copy todir="${dist.dir}">
			<fileset dir="target" includes="*.war,var/**/*,etc/**/*,lib/**/*,include/**/*" followsymlinks="false">
				<depend targetdir="${dist.dir}"/>
			</fileset>
		</copy>
	</target>

	<target name="clean" depends="buildlist" description="Calls 'tools-clean' on all components.">
		<iterate target="tools-clean"/>
		<delete dir="${tools.dest}"/>
	</target>

	<target name="findbugs" depends="buildlist">
		<iterate target="findbugs"/>
	</target>

</project>
